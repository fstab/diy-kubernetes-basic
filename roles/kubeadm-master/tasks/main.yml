---
# For debugging, you can undo kubeadm init with 'kubeadm reset'


- name: kubeadm init
  shell: >
    kubeadm init
    --pod-network-cidr 10.244.0.0/16
    --apiserver-advertise-address 172.16.0.100
    --apiserver-cert-extra-sans kube-master.int.fstab.de
    # --ignore-preflight-errors=DirAvailable--var-lib-etcd
  args:
    creates: /etc/kubernetes/admin.conf

# 'kubeadm init' generates '/var/lib/kubelet/config.yaml'.
# We want to overwrite the address. As we don't know how to do this with a command line
# parameter to 'kubeadm init', we do it retrospectively.
# See https://kubernetes.io/docs/setup/independent/kubelet-integration/#configure-kubelets-using-kubeadm
- name: reconfigure kubelet
  replace:
    dest: /var/lib/kubelet/config.yaml
    regexp: '^address: 0.0.0.0'
    replace: 'address: 172.16.0.100'
  register:
    kubelet_configuration

- name: restart kubelet
  systemd:
    name: kubelet
    state: restarted
  when: kubelet_configuration.changed

- name: Create kube config directory for user root
  file:
    path: /root/.kube
    state: directory

- name: Copy kube config for user root
  copy:
    remote_src: true
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    mode: 0600

- name: sysctl net.bridge.bridge-nf-call-iptables=1
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1

- name: download kube-flannel.yml
  get_url:
    url: "https://raw.githubusercontent.com/coreos/flannel/{{ kube_flannel_version}}/Documentation/kube-flannel.yml"
    dest: /root
    checksum: "{{ kube_flannel_checksum }}"

# The following regex works because we know the exact sha1 checksum of kube-flannel.yml
# so it does not need to be generic but only work for exactly that file.
# We don't use lineinfile because we want to replace multiple occurrences.
# As a result you should see in the logs of the flannel containers that flanneld binds
# to the vpn interface and not to eth0
- name: set flannel default network interface
  replace: >
      dest=/root/kube-flannel.yml
      regexp="^(        - --kube-subnet-mgr\n)(?!        - --iface=vpn0)"
      replace="\1        - --iface=vpn0\n"

- name: install flannel
  shell: kubectl apply -f /root/kube-flannel.yml
  args:
    creates: /etc/cni/net.d/10-flannel.conf

- name: Create a bootstrap token
  shell: kubeadm token create --description "ansible token created on $(date)" --print-join-command
  register: kubeadm_token_create
  changed_when: False

- name: Set the bootstrap token on the kube nodes
  set_fact:
    kubeadm_join_command: "{{ kubeadm_token_create.stdout }}"
  delegate_to: "{{ item }}"
  delegate_facts: True
  with_items: "{{ groups['kube-nodes'] }}"
  changed_when: False

- name: Download example deployment to /root/java-demo.yaml
  get_url:
    url: https://raw.githubusercontent.com/fstab/java-demo/master/java-demo.yaml
    dest: /root/java-demo.yaml
    checksum: sha1:0f313bcd847531bf3261bc44136cf2bcee0729ca
